load("funcitonComponents.asc");
load("components.asc");
load("netservices.asc");
application.onAppStart = function() {
	this.theGatewayURL = "http://smarthelp.apangea.com/flashremoting/gateway.aspx";
	this.theServicePath = "TutorRemoting.TutorRemoting";
	
	/*******************
	Remoting Connections
	********************/
	NetServices.setDefaultGatewayUrl(this.theGatewayURL);
	this.theServer = NetServices.createGatewayConnection();
	this.theService = this.theServer.getService(this.theServicePath, this);

};
// Listen for the new connection to this application.
// newUserName is a parameter passed in from the client-side nc.connect
// call.
application.onConnect = function(newClient, newUserName) {
	// Set the global user name with the user name passed into this function.
	gFrameworkFC.getClientGlobals(newClient).username = newUserName;
	// Accept the connection from the user.
	application.acceptConnection(newClient);
	// Note that if your application requires additional code following the
	// explicit acceptConnection, you must place that code in an
	// application.onConnectAccept statement (required when using components)
	trace(newUserName + " has connected.");
};

application.onDisconnect = function(client) {
	var userInfo = gFrameworkFC.getClientGlobals(client);
	
	trace("this.theService.nc.uri: "+this.theService.nc.uri);
	trace("this.theService.nc.isConnected: "+this.theService.nc.isConnected);
/*
	for (j in this.theService) {
		trace(j+" === "+this.theService[j]);
	}
	for (p in this.theService.nc) {
		trace(">> this.theService.nc." + p + " = " + this.theService[p]);
	}
*/
	//this.theService.getServerTime();
	switch(userInfo.userType) {
		case "t":
			trace("Tutor " + userInfo.username + " has disconnected.");
			for (var i = 0; i < application.clients.length; i++) {
				var c = application.clients[i];
				c.call("disconnect_t",null,userInfo.username);
			}
			break;
		case "s":
			trace("Student " + userInfo.username + " has disconnected.");
			for (var i = 0; i < application.clients.length; i++) {
				var c = application.clients[i];
				c.call("disconnect_s",null,userInfo.username);
			}
			break;
		default:
			trace("Uncategorized user " + userInfo.username + " has disconnected.");
	}
};

application.getServerTime_Result = function(returnObj) {
/*	var localDate = new Date();
	var serverDate = new Date(returnObj.yr,returnObj.mo,returnObj.dy,returnObj.hrs,returnObj.mins,returnObj.secs);
	trace("returnObj.yr == "+returnObj.yr);
	trace("serverDate.getTime() = "+serverDate.getTime());
	trace("localDate.getTime() = "+localDate.getTime());
	trace("localDate = "+localDate);
	*/
	trace("SUCCESS!!!!!!");
};

application.getServerTime_Status = function(returnObj) {
	trace("getTutorInfo failed");
	for (m in returnObj) {
		trace(m+" :: " + returnObj[m]);
	}
};
